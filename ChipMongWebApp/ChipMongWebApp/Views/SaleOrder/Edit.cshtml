@using ChipMongWebApp.Extension
@model ChipMongWebApp.Models.DTO.SaleOrder.SaleOrderViewDTO

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/Main/_Main.cshtml";
}

<div class="card" id="action">
    <div class="card-body text-dark shadow-sm merienda">
        <button type="button" class="btn btn-success" id="btnSave"> <i class="fas fa-save"></i> Save </button>
        <button type="button" class="btn btn-danger" id="btnCancel"> <i class="fas fa-times"></i> Cancel </button>
    </div>
</div>

<br />

@*@Html.Partial("~/Views/SaleOrder/EditForm.cshtml", Model)*@
<form id="record" name="record">
    @Html.HiddenFor(m => m.id)
    @Html.Hidden("deleteLineItemID", "0")

    <!-- SaleOrder Card -->
    <div class="card shadow-sm">
        <div class="card-header merienda"> SaleOrder </div>
        <!-- card body -->
        <div class="card-body">
            <!--row 1-->
            <div class="row">

                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.code)
                        @Html.TextBoxFor(m => m.code, new { @class = "form-control", @readonly = "readonly" })
                    </div>
                </div>

                <div class="col-4">
                    <div class="form-group">
                        @Html.Label("Date")
                        @Html.TextBoxFor(m => m.code, new { @class = "form-control" })
                    </div>
                </div>

                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.customerID)
                        <select id="customerID" name="customerID" class="form-control">
                            <option value="@Model.customerID" selected="selected"> @Model.customer.firstName @Model.customer.lastName </option>
                        </select>
                    </div>
                </div>

            </div>
            <!--end  row 1-->
            <!--row 2-->
            <div class="row">

                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.total)
                        @Html.TextBoxFor(m => m.total, new { @class = "form-control", @readonly = "readonly", Value = Model.total.ToTwoDecimalPoint() })
                    </div>
                </div>

                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.status)
                        @Html.TextBoxFor(m => m.status, new { @class = "form-control" })
                    </div>
                </div>

                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.remarks)
                        @Html.TextAreaFor(m => m.remarks, new { @class = "form-control" })
                    </div>
                </div>

            </div>
            <!--end  row 2-->
        </div>
        <!--endcard body -->
    </div>
    <!-- end  SaleOrder Card -->



    <br />

    <div id="tableData" class="shadow-sm bg-white">
        <table class="table table-bordered table-striped table-hover" id="tblLineItem">
            <thead>
                <tr class="text-center">
                    <th scope="col"> Item </th>
                    <th scope="col"> Quantity </th>
                    <th scope="col"> Price </th>
                    <th scope="col"> Total </th>
                    <th scope="col" style="width:40px;"> </th>

                </tr>
            </thead>
            <tbody>
                @{
        int i = 1;
        foreach (var item in Model.items)
        {
            <tr rowIndex="@i">
                <input type="hidden" name="@("lineItemID"+i)" id="@("lineItemID"+i)" value="@item.id" />
                <input type="hidden" name="items[][id]" id="items[][id]" value="@item.id" />
                <td>
                    <select class="form-control line-item-required" id="item0" name="items[][itemID]" onchange="itemChange($(this))">
                        <option value=""> -- Please Select Item -- </option>
                        <option value="1"> Item 1 </option>
                        <option value="2"> Item 2 </option>
                        <option value="3"> Item 3 </option>
                        <option value="4"> Item 4 </option>
                    </select>
                </td>
                <td> <input class="form-control line-item-required" type="text" id="@("quantity"+i)" name="items[][quantity]" placeholder="Quantity" value="@item.quantity.ToTwoDecimalPoint()" onchange="calculation($(this))" /> </td>
                <td> <input class="form-control line-item-required" type="text" id="@("price"+i)" name="items[][price]" placeholder="Price" value="@item.price.ToTwoDecimalPoint()" onchange="calculation($(this))" /> </td>
                <td> <input class="form-control total" type="text" id="@("total"+i)" name="total0" value="@item.total.ToTwoDecimalPoint()" readonly /> </td>
                <td>
                    <button type="button" class="btn btn-danger" onclick="deleteLineItem($(this))"> <i class="fas fa-trash-alt"></i></button>
                </td>
            </tr>
i++;

}
                }

                <tr rowIndex="0">
                    <td>
                        <select class="form-control line-item-required" id="item0" name="items[][itemID]" rowIndex="0" onchange="itemChange($(this))">
                            <option value=""> -- Please Select Item -- </option>
                            <option value="1"> Item 1 </option>
                            <option value="2"> Item 2 </option>
                            <option value="3"> Item 3 </option>
                            <option value="4"> Item 4 </option>
                        </select>
                    </td>
                    <td> <input class="form-control line-item-required" type="text" id="quantity0" name="items[][quantity]" placeholder="Quantity" onchange="calculation($(this))" /> </td>
                    <td> <input class="form-control line-item-required" type="text" id="price0" name="items[][price]" placeholder="Price" onchange="calculation($(this))" /> </td>
                    <td> <input class="form-control total" type="text" id="total0" name="total0" readonly /> </td>
                    <td>
                        <button type="button" class="btn btn-success" onclick="saveLineItem($(this))"> <i class="fas fa-save"></i></button>
                    </td>
                </tr>

            </tbody>
        </table>
    </div>
</form>


<script>
    var ssaURL = "@Url.Content("~/customer/ssa")";
    var endPoint = "@Url.Content("~/saleorder")";
    var select2PlaceHolder = "Customer";
    var rowIndex = @Model.items.Count();
    var tableRow = `<tr rowIndex="0">
                <td>
                    <select class="form-control line-item-required" id="item0" name="items[][itemID]" rowIndex="0" onchange="itemChange($(this))">
                        <option value=""> -- Please Select Item -- </option>
                        <option value="1"> Item 1 </option>
                        <option value="2"> Item 2 </option>
                        <option value="3"> Item 3 </option>
                        <option value="4"> Item 4 </option>
                    </select>
                </td>
                <td> <input class="form-control line-item-required" type="text" id="quantity0" name="items[][quantity]" placeholder="Quantity" onchange="calculation($(this))" /> </td>
                <td> <input class="form-control line-item-required" type="text" id="price0" name="items[][price]" placeholder="Price" onchange="calculation($(this))" /> </td>
                <td> <input class="form-control total" type="text" id="total0" name="total0" readonly /> </td>
                <td>
                    <button type="button" class="btn btn-success" onclick="saveLineItem($(this))"> <i class="fas fa-save"></i></button>
                </td>
            </tr>`;
    $(document).ready(function () {
        $("#btnSave").click(function () { save(); });
        $("#btnCancel").click(function () { cancel(); });
        
        $('#customerID').select2({
            ajax: {
                url: ssaURL,
                dataType: "json",
                data: function (params) {
                    return {
                        q: params.term, // search term
                        page: params.page
                    };
                }
            },
            placeholder: select2PlaceHolder,
            escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
            minimumInputLength: 1,
            templateResult: templateResult,
            templateSelection: templateSelection

        });
       
        
    });
    //-> save
    function save() {
        //--when submit form to server should include route edit / id && form hidden id 
        // then compare on server whether route id && hidden id the same or not , if not the same it mean something wrong
        $('#tblLineItem tr:last').remove();
        ajaxHelper(endPoint + "/edit", $('#record').serializeObject(), requestMethod.POST).then(function (done) {
            //$(div).html(done);
        });
        
    }

    //-> templateResult
    function templateResult(data) {
        if (data.loading)
            return data.text;

        var markup = `<div class="row">
                            <div class="col-4"> ${data.firstName}  </div>
                            <div class="col-4"> ${data.lastName}  </div>
                            <div class="col-4"> ${data.code}  </div>
                        </div>`;
        return markup;
    }

    //-> templateSelection
    function templateSelection(data) {
        if (data.text != "")
            return data.text;
        return data.firstName + " " + data.lastName;
    }

    //-> deleteLineItem
    function deleteLineItem(prop) {
        if (confirm("Do you to delete this line item?")) {
            var rowIndex = prop.closest("tr").attr("rowIndex");
            var deleteLineItemID = $("#deleteLineItemID").val();
            var lineItemID = $("#lineItemID" + rowIndex).val();
            deleteLineItemID += "," + lineItemID;
            $("#deleteLineItemID").val(deleteLineItemID);
            prop.closest("tr").remove();
            headerCalculation();
        }
    }

    //-> calculation
    function calculation(prop) {
        var index = prop.closest("tr").attr("rowIndex")
        var quantity = toFloat($("#quantity" + index).val());
        var price = toFloat($("#price" + index).val());
        var total = quantity * price;
        $("#total" + index).val(toFloatWithTwoPrecision(total));
        headerCalculation();
    }

    //-> headerCalculation
    function headerCalculation() {
        
        var sum = 0;
        $(".total").each(function () {
            //var value = $(this).val();
            var value = toFloat($(this).val());
            sum += parseFloat(value);
        });

        alert("sum" + sum);
        $("#total").val(toFloatWithTwoPrecision(sum));
    }

    //-> itemChange
    function itemChange(prop) {
        //alert();
    }

    //-> saveLineItem
    function saveLineItem(prop) {
        if (prop.attr('class') == "btn btn-success") {
            if (isValidLineItem()) {
                prop.removeClass("btn-success")
                    .addClass("btn-danger")
                    .attr('rowIndex', rowIndex)
                    .html('<i class="fas fa-trash-alt"></i> ');
                rowIndex++;
                prop.closest("tr").attr("rowIndex", rowIndex)
                $("#quantity0").attr('id', "quantity" + (rowIndex));
                $("#price0").attr('id', "price" + (rowIndex));
                $("#total0").attr('id', "total" + (rowIndex));
                $("#tblLineItem").append(tableRow);
                headerCalculation();
            }
        }
        else {
            if (confirm("Do you to delete this line item?")) {
                prop.closest("tr").remove();
                headerCalculation();
            }
        }
    }

    
</script>









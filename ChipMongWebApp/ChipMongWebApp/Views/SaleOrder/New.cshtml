@using ChipMongWebApp.Helpers
@model ChipMongWebApp.Models.DTO.SaleOrder.SaleOrderViewDTO
@{
    /**/

    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/Main/_Main.cshtml";
}

<div class="card" id="action">
    <div class="card-body text-dark shadow-sm merienda">
        <button type="button" class="btn btn-success" id="btnSave"> <i class="fas fa-save"></i>  Save  </button>
        <button type="button" class="btn btn-danger" id="btnCancel"> <i class="fas fa-times"></i> Cancel  </button>
    </div>
</div>

<br />

<form id="record" name="record">
    @Html.AntiForgeryToken()
    <!-- card -->
    <div class="card shadow-sm">
        <div class="card-header merienda"> SaleOrder </div>

        <!-- card body -->
        <div class="card-body">

            <!--row 1-->
            <div class="row">
                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.code)
                        @Html.TextBoxFor(m => m.code, new { @class = "form-control", @readonly = "readonly", placeholder = "Code" })
                    </div>
                </div>

                <div class="col-4">
                    <div class="form-group">
                        @Html.Label("Date")
                        @Html.TextBoxFor(m => m.date, new { @class = "form-control", Value = DateTime.Now.ToString("dd/MM/yyyy") })
                    </div>
                </div>

                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.customerID)
                        @Html.DropDownListFor(m => m.customerID, new SelectList(Enumerable.Empty<SelectListItem>()), new { @class = "form-control required" })
                    </div>
                </div>

            </div>
            <!--end  row 1-->
            <!--row 2-->
            <div class="row">
                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.total)
                        @Html.TextBoxFor(m => m.total, new { @class = "form-control", @readonly = "readonly", placeholder = "Total", Value = "0.00" })
                    </div>
                </div>

                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.status)
                        @Html.DropDownListFor(m => m.status, SelectionHelper.SaleOrderStatus("New"), null, new { @class = "form-control" })
                    </div>
                </div>

                <div class="col-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.remarks)
                        @Html.TextAreaFor(m => m.remarks, new { @class = "form-control", placeholder = "Remarks", @maxlength = "1000" })
                    </div>
                </div>

            </div>
            <!--end  row 2-->
        </div>
        <!-- end card body -->
    </div>
    <!-- end card -->

    <br />

    <!-- LineItemTable  -->
    @Html.Partial("~/Views/SaleOrder/LineItemTable.cshtml", null)
    


</form>

<script src="~/Content/js/modules/SaleOrder.js"></script>

<script>

    var endPoint = "@Url.Content("~/saleorder")";
    var ssaURL = "@Url.Content("~/customer/ssa")";
    var select2PlaceHolder = "Customer";
    var rowIndex = 0;
    var tableRow = `@Html.Partial("~/Views/SaleOrder/LineItem.cshtml")`;

    $(document).ready(function () { setupEvents(); });

    //-> save
    function save() { saveRecord(endPoint, "new"); }

    //-> cancel
    function cancel() { window.location.href = endPoint + "/find"; }

    //-> itemChange
    function itemChange(prop) { getItem(prop, "@Url.Content("~/item")"); }

</script>


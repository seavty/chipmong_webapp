@using ChipMongWebApp.Utils.Helpers
@using ChipMongWebApp.Models.DTO.SaleOrder
@model ChipMongWebApp.Models.DTO.SaleOrder.SaleOrderFindDTO
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/Main/_Main.cshtml";
}

<form name="frmUpload" id="frmUpload" enctype="multipart/form-data">
    @Html.AntiForgeryToken()
    <input type="file" id="ExcelFile" name="ExcelFile" style="display:none" accept=".xlsx" />
</form>

<form name="record" id="record">
    @Html.AntiForgeryToken()
    @Html.Partial("~/Views/Shared/Template/FindMode/Button.cshtml")

    <br />

    <div class="card shadow-sm">
        <div class="card-header merienda"> Find SaleOrder </div>
        @Html.HiddenFor(m => m.orderBy, new { Value = nameof(vSaleOrderDTO.slor_Code) })
        @Html.HiddenFor(m => m.orderDirection, new { Value = ConstantHelper.ASC })

        <div class="card-body">
            <!-- row 1 -->
            <div class="row">
                <div class="col">
                    <div class="form-group">
                        @Html.LabelFor(m => m.code)
                        @Html.TextBoxFor(m => m.code, new { @class = "form-control", placeholder = "Code", @maxlength = "100" })

                    </div>
                </div>

                <div class="col">
                    <div class="form-group">
                        @Html.LabelFor(m => m.customer)
                        @Html.TextBoxFor(m => m.customer, new { @class = "form-control", placeholder = "Customer", @maxlength = "100" })
                    </div>
                </div>

                <div class="col">
                    <div class="form-group">
                        @Html.LabelFor(m => m.status)
                        @Html.DropDownListFor(m => m.status, SelectionHelper.SaleOrderStatus(), "-- Select Status --", new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <!-- end row 1 -->
            <!-- row 2 -->
            <div class="row">
                <div class="col">
                    <div class="form-group">
                        @Html.Label("Request Date (From)")
                        @Html.TextBoxFor(m => m.slor_RequiredDate_From, new { @class = "form-control date-picker", placeholder = "Request Date From", @maxlength = "100" })
                        @Html.Label("Request Date (To)")
                        @Html.TextBoxFor(m => m.slor_RequiredDate_To, new { @class = "form-control date-picker", placeholder = "Request Date To", @maxlength = "100" })
                    </div>
                </div>

                <div class="col">
                    <div class="form-group">
                        <label for="exampleFormControlSelect1"> Supply Point </label>
                        <select class="form-control" name="slor_SourceOfSupply" id="slor_SourceOfSupply">
                            <option value="" selected> -- Select Supply Point  -- </option>
                            <option value="2"> Oknha Mong Port </option>
                            <option value="3"> Poi Pet WH </option>
                            <option value="4">  Railway WH - Phnom Penh </option>
                            <option value="1"> TMP Plant </option>
                        </select>
                    </div>
                </div>

                <div class="col">
                    <div class="form-group">
                        @Html.LabelFor(m => m.slor_TruckNo)
                        @Html.TextBoxFor(m => m.slor_TruckNo, new { @class = "form-control", placeholder = "Truck No", @maxlength = "100" })
                    </div>
                </div>
            </div>
            <!-- end row 2 -->

            <!-- row 3 -->
            <div class="row">
                <div class="col col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.slor_TruckDriverPhoneNo)
                        @Html.TextBoxFor(m => m.slor_TruckDriverPhoneNo, new { @class = "form-control", placeholder = "Truck Driver Phone No", @maxlength = "100" })
                    </div>
                </div>
                

                <div class="col col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.slor_DocNo)
                        @Html.TextBoxFor(m => m.slor_DocNo, new { @class = "form-control", placeholder = "Doc No", @maxlength = "100" })
                    </div>
                </div>

                <div class="col col-md-4">
                    <div class="form-group">
                        @Html.LabelFor(m => m.slor_ShipmentNo)
                        @Html.TextBoxFor(m => m.slor_ShipmentNo, new { @class = "form-control", placeholder = "Shipment No", @maxlength = "100" })
                    </div>
                </div>
            </div>
            <!-- end row 3 -->






        </div>
    </div>

    <br />
    @Html.Partial("~/Views/Shared/Template/FindMode/TableData.cshtml")
    <br />

</form>

<script src="~/Content/js/jquery-upload.js"></script>
<script src="~/Content/js/function/template/findmode/button.js"></script>
<script>
    const controller = "@Url.Content($"~/{ConstantHelper.SALEORDER_CONTROLLER}")";
    const uploadExcelButton = `<button type="button" class="btn btn-info" id="btnUploadExcel"> <i class="fas fa-upload"></i> Upload Excel </button>`;

    const sendLine = `&nbsp;<button type="button" class="btn btn-secondary" id="btnSendLine"> <i class="fas fa-envelope"></i> Send </button>`;

    $(document).ready(() => {
        $("#btnNew").closest("div").append(uploadExcelButton);
        $("#btnNew").closest("div").append(sendLine);
        //paging(1);
        $("#btnUploadExcel").click(() => $("#ExcelFile").trigger("click"));
        $("#ExcelFile").change(() => uploadExcel());

        $("#btnSendLine").click(function (e) {
            var controller = "@Url.Content($"~/{@ConstantHelper.SALEORDER_CONTROLLER}/sendLine")";
            var ids = [];
            $(".chk").each(function (i, v) {
                if ($(v).is(":checked"))
                    ids.push($(v).val());
            });
            if (ids.length <= 0) {
                alert("Please select record(s) to send !");
                return false;
            }
            
            ajaxHelper(controller, "ids=" + ids, requestMethod.POST).then((data) => {
                if (data == "True")
                    alert("PO(s) sent !");
                else
                    alert(data);
            })
        });
    });

    //-> uploadExcel
    let uploadExcel = () => {
        $('#loadingIndicator').modal({
            keyboard: false,
            backdrop: "static"
        });

        $("#ExcelFile").upload(controller + "/UploadExcel?" + $("#frmUpload").serialize(), function (data) {
            console.log(data);
            if (data.substring(0, 2) == "ok") {
                alert(data.replace("ok", "") + " record(s) have been updated.");
                window.location.reload();
            }
            else
                location.href = "@Url.Content($"~/{@ConstantHelper.AUTH_CONTROLLER}/login")";

                //location.href = $("#baseURL").val() + "/auth/login";

            $('#loadingIndicator').modal("hide");
        });
    }

    
</script>


